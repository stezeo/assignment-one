#include<io.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdlib.h>
#include <stdio.h>

#include <stdio.h>
#include <time.h>
#include <string.h>

#define BUF_SIZE	6000
#define ARRAY_SIZE	4000

int	ft_intcmp(int a, int b)
{
	if (a > b)
		return (1);
	else
		return (0);
}

void	ft_sort(int last_i, int ary[])
{
	int	i;
	int	k;
	int	temp1;
	int	temp2;

	i = 2;
	while (i < (last_i - 1))
	{
		k = 0;
		if (ft_intcmp(ary[i - 2], ary[i]))
		{
			temp1 = ary[i - 2];
			temp2 = ary[i - 1];
			ary[i - 2] = ary[i];
			ary[i - 1] = ary[i + 1];
			ary[i] = temp1;
			ary[i + 1] = temp2;
			k++;
		}
		if (k > 0)
			i = 2;
		i = i + 2;
	}
}

int	getnum(char bf[], int ary[])
{
	int i;
	//char *str;
	int i1;
	int i2;
	int k;
	int n;

	n = 0;
	i = 0;
	while (bf[i] != '\0')
	{
		i1 = i;
		i2 = 0;
		if (bf[i] >= '0' && bf[i] <= '9')
		{
			while (bf[i] >= '0' && bf[i] <= '9')
			{
				i++;
			}
			i2 = i;
		}
		if (i2 != 0)
		{
			char *str;
			str = (char *)malloc((i2 - i1 + 1) * sizeof(char));
			k = 0;
			while (k <= (i2 - i1))
			{
				str[k] = bf[i1];
				i1++;
				k++;
			}
			str[k] = '\0';
			ary[n] = atoi(str);
			n++;
		}
		i++;
	}
	return (n);
}


int	main(int argc, char **argv)
{
	int	rd;
	//int	rd2;
	int	fd;
	char	bf[BUF_SIZE + 1];
	int	i;
	int	ary[ARRAY_SIZE];

	i = 0;
	if (argc < 2)
		printf("File name is missing.\n");
	else if (argc > 2)
		printf("Too many arguments.\n");
	else
	{
	
		fd = _open(argv[1], O_RDONLY);
		if (fd != -1)
		{
			rd = _read(fd, bf, BUF_SIZE);
		}
		bf[rd] = '\0';

	}

	char last_index;
	last_index = getnum(bf, ary);
	ft_sort(last_index, ary);
	int j = 0;
	while (j < last_index)
	{
		printf("%d ", ary[j]);
		j++;
	}
	printf("\n");
	j = 1;
	while (j < (last_index - 2))
	{
		printf("%d", (ary[j + 2] - ary[j]));
		j = j + 2;
		if (j < (last_index - 2))
		{
			printf(",");
		}
	}
	printf("\n");
	return (0);

}
